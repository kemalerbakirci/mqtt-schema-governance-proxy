[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "mqtt-schema-governance-proxy"
version = "1.0.0"
description = "MQTT Schema Governance Proxy - Validates MQTT messages against topic and schema rules"
authors = ["Your Name <your.email@example.com>"]
readme = "docs/README.md"
license = "MIT"
packages = [{include = "src"}]

[tool.poetry.dependencies]
python = "^3.8"
paho-mqtt = "^1.6.1"
jsonschema = "^4.20.0"
protobuf = "^4.25.0"
prometheus_client = "^0.19.0"
fastapi = "^0.104.0"
uvicorn = "^0.24.0"
pyyaml = "^6.0.1"
python-json-logger = "^2.0.7"
aiosqlite = "^0.19.0"

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.3"
pytest-asyncio = "^0.21.1"
mypy = "^1.7.0"
flake8 = "^6.1.0"
black = "^23.11.0"
isort = "^5.12.0"
coverage = "^7.3.2"

[tool.poetry.scripts]
mqtt-proxy = "src.main:main"
replay-quarantine = "scripts.replay_quarantine:main"

[tool.pytest.ini_options]
asyncio_mode = "auto"
testpaths = ["tests"]
python_files = ["test_*.py"]
python_functions = ["test_*"]
addopts = "-v --tb=short"

[tool.black]
line-length = 100
target-version = ['py38']
include = '\.pyi?$'

[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
ignore_missing_imports = true

[tool.coverage.run]
source = ["src"]
omit = ["tests/*", "scripts/*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
]
